<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<doc>
    <assembly>
        <name>Xceed.Wpf.DataGrid.Views3D</name>
    </assembly>
    <members>
        <member name="N:Xceed.Wpf.DataGrid.Views">
            <summary>The Xceed.Wpf.DataGrid.Views namespace regroups all the classes which are required to apply views and themes to a DataGridControl.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces">
            <summary>Value that represents the various surfaces that are supported by the  Cardflow 3D view.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces.Left">
            <summary>The surface displayed on all cards located to the left of the center card.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces.Center">
            <summary>The surface displayed on the front of the center card.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces.Right">
            <summary>The surface displayed on all cards located to the right of the center card.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces.Back">
            <summary>The surface displayed on the back of the center card.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces.All">
            <summary>All surfaces.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.ChameleonTitleRegionPosition">
            <summary>Value representing the various title-region positions supported by the Chameleon theme (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ChameleonTitleRegionPosition.Left">
            <summary>The title-region is positioned at the left of the surface.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ChameleonTitleRegionPosition.Right">
            <summary>The title-region is positioned at the right of the surface.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition">
            <summary>Value representing the various title-region positions supported by the Elemental themes (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition.Top">
            <summary>The title-region is positioned at the top of the surface.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition.Middle">
            <summary>The title-region is positioned in the middle of the surface.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition.Bottom">
            <summary>The title-region is positioned at the bottom of the surface.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.CardflowItemsHost">
            <summary>    Class used in DataGridControl     templates as a replacement for the     ItemsPresenter when a grid is in a     cardflow-view layout and that will contain the data items as     well as the items contained in non-fixed     header and footer sections and whose containers are created     from the associated      CustomItemContainerGenerator.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.#ctor">
            <summary>Initializes a new instance of the CardflowItemsHost class.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.ArrangeOverride(System.Windows.Size)">
            <summary>Arranges the content of the items.</summary>
            <param name="finalSize">    The final area within the parent that this element should     use to arrange itself and its children.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CreateChildCollection">
            <summary>Creates an empty list of UIElements that will contain the containers that are generated for data items and items contained in non-fixed header and footer sections.</summary>
            <returns>An empty IList&lt;UIElement&gt; collection that will contain the containers that are generated for data items and items contained in the non-fixed header and footer sections.</returns>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.GetVisualChild(System.Int32)">
            <summary>Gets the index of a visual child element.</summary>
            <returns>The visual child element at the specified index.</returns>
            <param name="index">    The zero-based index of the visual child element to     return.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.InvalidateScrollInfo">
            <summary>Called by an IScrollInfo interface that is attached to a ScrollViewer when the value of any scrolling property size changes.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.MeasureOverride(System.Windows.Size)">
            <summary>Measures the child elements in anticipation of arranging them during the  ArrangeOverride pass</summary>
            <returns>The Size that represents the desired size of the element.</returns>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.OnContainersRemoved(System.Collections.Generic.IList`1{System.Windows.DependencyObject})">
            <summary>    Indicates that containers in the      CustomItemContainerGenerator will no longer be     used/recycled and can be removed from the items host.</summary>
            <param name="removedContainers">    A list of the containers that will no longer be     used/recycled and that can be removed from the items     host.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.OnItemsAdded(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32)">
            <summary>    Indicates that items have been added to the data source     or through the expansion of groups or details and need to be     added to the items host.</summary>
            <param name="position">    The GeneratorPosition at which the items     were added.</param>
            <param name="index">The zero-based index at which the item was added.</param>
            <param name="itemCount">The number of items that were added.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.OnItemsMoved(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList`1{System.Windows.DependencyObject})">
            <summary>    Indicates that items have been moved in the data source     and need to be repositioned in the items host.</summary>
            <param name="position">    The GeneratorPosition to which the items     were moved.</param>
            <param name="index">The zero-based index to which the item was moved.</param>
            <param name="oldPosition">    The old GeneratorPosition from which the     items were moved.</param>
            <param name="oldIndex">The old index.</param>
            <param name="itemCount">The number of items that were moved.</param>
            <param name="itemUICount">The number of containers that were moved.</param>
            <param name="affectedContainers">    A list of the containers that were affected by the     move.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.OnItemsRemoved(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList`1{System.Windows.DependencyObject})">
            <summary>    Indicates that items have been removed from the data     source or through the collapse of groups or details and need to     be removed to the items host.</summary>
            <param name="position">The new GeneratorPosition.</param>
            <param name="index">    The zero-based index at which the item was     removed.</param>
            <param name="oldPosition">    The GeneratorPosition at which the items     were removed.</param>
            <param name="oldIndex">The old index.</param>
            <param name="itemCount">The number of items that were removed.</param>
            <param name="itemUICount">The number of containers that were removed.</param>
            <param name="affectedContainers">    A list of the containers that were affected by the     removal of items.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.OnItemsReplaced(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList`1{System.Windows.DependencyObject})">
            <summary>    Indicates that items have been replaced in the data     source and need to be removed from the items host.</summary>
            <param name="position">The new GeneratorPosition.</param>
            <param name="index">    The zero-based index of the item that was     replaced.</param>
            <param name="oldPosition">    The GeneratorPosition at which the items     were remplaced.</param>
            <param name="oldIndex">The old index.</param>
            <param name="itemCount">The number of items that were remplaced.</param>
            <param name="itemUICount">The number of containers that were replaced.</param>
            <param name="affectedContainers">    A list of the containers that were affected by the     replacement of the items.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.OnItemsReset">
            <summary>    Indicates that the data source was reset and that the     items host should clear its children.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.ScrollByOffset(System.Int32)">
            <summary>Scrolls by the specified offset.</summary>
            <param name="offset">The offset, in card widths, by which to scroll. Can be negative to scroll to the left, and positive to scroll to the right.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.ScrollToIndex(System.Int32)">
            <summary>Scrolls to the specified index.</summary>
            <param name="index">The zero-based index to which to scroll.</param>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraLooksAtOriginOnX">
            <summary>    Gets or sets a value indicating whether the camera looks     at the X origin when it moves along the X axis (see     Remarks).</summary>
            <remarks>    When the camera moves along the X and Y axes, it can     either continuously look at the corresponding X or Y origins or     straight ahead. For example, if the camera were to move in a     negative direction (left) along the X axis and in a positive     direction (up) along the Y axis with both the      CameraLooksAtOriginOnX and      CameraLooksAtOriginOnY properties set to     false, it would look straight ahead without     looking at the cards, which would then be visible only on the     lower right (see Figure 1). With the camera in the same     position but looking at both the X and Y origins, the result     would be that the center card would always remain visible and     in the center of the viewport (see Figure 2).          Figure 1: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to     false          Figure 2: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to true          Figure 3: CameraLooksAtOriginOnY set to     true; CameraLooksAtOriginOnX set to     false          Figure 4: CameraLooksAtOriginOnX set to     true; CameraLooksAtOriginOnY set to     false</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraLooksAtOriginOnY">
            <summary>    Gets or sets a value indicating whether the camera looks     at the Y origin when it moves along the Y axis (see     Remarks).</summary>
            <remarks>    When the camera moves along the X and Y axes, it can     either continuously look at the corresponding X or Y origins or     straight ahead. For example, if the camera were to move in a     negative direction (left) along the X axis and in a positive     direction (up) along the Y axis with both the      CameraLooksAtOriginOnX and      CameraLooksAtOriginOnY properties set to     false, it would look straight ahead without     looking at the cards, which would then be visible only on the     lower right (see Figure 1). With the camera in the same     position but looking at both the X and Y origins, the result     would be that the center card would always remain visible and     in the center of the viewport (see Figure 2).          Figure 1: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to     false          Figure 2: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to true          Figure 3: CameraLooksAtOriginOnY set to     true; CameraLooksAtOriginOnX set to     false          Figure 4: CameraLooksAtOriginOnX set to     true; CameraLooksAtOriginOnY set to     false</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraRevolutionXAngle">
            <summary>    Gets or sets the angle of the camera as it revolves on     the X-axis.</summary>
            <remarks>    The      CameraRevolutionXAngle and      CameraRevolutionYAngle properties determine the angle of     the camera as it revolves on the X or Y axis,     respectively.          Figure 1: Camera revolution angle on the X     axis</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraRevolutionYAngle">
            <summary>    Gets or sets the angle of the camera as it revolves on     the Y-axis.</summary>
            <remarks>    The      CameraRevolutionXAngle and      CameraRevolutionYAngle properties determine the angle of     the camera as it revolves on the X or Y axis,     respectively.          Figure 1: Camera revolution angle on the X     axis</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraXOffset">
            <summary>    Gets or sets the offset of the camera from the center of the     viewport on the X axis.     Gets or sets the X-axis offset of the camera from the     middle of the center card.</summary>
            <remarks>    The camera offset properties determine the offset of the     camera, in cards widths, from the middle of the center card on     their corresponding axis, as illustrated in the diagram     below.     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraYOffset">
            <summary>    Gets or sets the offset of the camera from the center of     the viewport on the Y axis.     Gets or sets the Y-axis offset of the camera from the     middle of the center card.</summary>
            <remarks>    The camera offset properties determine the offset of the     camera, in cards widths, from the middle of the center card on     their corresponding axis, as illustrated in the diagram     below.     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraZOffset">
            <summary>    Gets or sets the offset of the camera from the center of     the viewport on the Z axis.     Gets or sets the Z-axis offset of the camera from the     middle of the center card.</summary>
            <remarks>    The camera offset properties determine the offset of the     camera, in cards widths, from the middle of the center card on     their corresponding axis, as illustrated in the diagram     below.     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CardHeightToViewportRatio">
            <summary>    Gets or sets the physical card size relative to the     height of the viewport.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CenterCardXAngle">
            <summary>    Gets or sets the X-axis angle of the center card (see     Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CenterCardYAngle">
            <summary>    Gets or sets the Y-axis angle of the center card (see     Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.EmptySurfaceBrush">
            <summary>    Gets or sets the maximum number of cards on each side of     the center card on which surfaces are displayed.</summary>
            <remarks>Cards that are outside the specified range will not display surfaces and will use the  EmptySurfaceBrush. By default, 12.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.FieldOfView">
            <summary>    Gets or sets the camera's horizontal field of     view.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.IsCardFlippingEnabled">
            <summary>    Gets or sets a value indicating whether the center card     can be flipped to show its back surface.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.ShowReflections">
            <summary>    Gets or sets a value indicating whether card reflections     are shown.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsCount">
            <summary>    Gets or sets the maximum number of cards on each side of     the center card on which surfaces are displayed.</summary>
            <remarks>Cards that are outside the specified range will not display surfaces and will use the  EmptySurfaceBrush. By default, 12.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsXAngle">
            <summary>    Gets or sets the X-axis angle of the cards located to either     side of the center card.     Gets or sets the X-axis angle of the cards located to     either side of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsXOffset">
            <summary>    Gets or sets the X-axis offset of the cards located to     either side of the center card, measured from the middle of the     center card (see Remarks).</summary>
            <remarks>    Changing the X or Z side-card offsets results in the side     cards being moved along the corresponding X or Z axis. Offsets     are measured in card widths, meaning that an offset of +1 on     the Z axis will cause the side-cards to move 1 card width     forward (red cards in the diagram below).     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsXSpacing">
            <summary>    Gets or sets the X-axis spacing between the cards located     to either side of the center card.</summary>
            <remarks>This property does not affect the spacing between the center card and the immediate left and right side cards</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsYAngle">
            <summary>    Gets or sets the Y-axis angle of the cards located to either     side of the center card.     Gets or sets the Y-axis angle of the cards located to     either side of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsZOffset">
            <summary>    Gets or sets the Z-axis offset of the cards located to     either side of the center card, measured from the middle of the     center card.</summary>
            <remarks>    Changing the X or Z side-card offsets results in the side     cards being moved along the corresponding X or Z axis. Offsets     are measured in card widths, meaning that an offset of +1 on     the Z axis will cause the side-cards to move 1 card width     forward (red cards in the diagram below).     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsZSpacing">
            <summary>    Gets or sets the Z-axis spacing between the cards located     to either side of the center card.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.VisualChildrenCount">
            <summary>    Gets the number of visual child elements within this     element.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraLooksAtOriginOnXProperty">
            <summary>Identifies the  CameraLooksAtOriginOnX dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraLooksAtOriginOnYProperty">
            <summary>Identifies the  CameraLooksAtOriginOnY dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraRevolutionXAngleProperty">
            <summary>Identifies the  CameraRevolutionXAngle dependency property.Identifies the  CameraRevolutionXAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraRevolutionYAngleProperty">
            <summary>Identifies the  CameraRevolutionYAngle dependency property.Identifies the  CameraRevolutionYAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraXOffsetProperty">
            <summary>Identifies the  CameraXOffset dependency property.Identifies the  CameraXOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraYOffsetProperty">
            <summary>Identifies the  CameraYOffset dependency property.Identifies the  CameraYOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CameraZOffsetProperty">
            <summary>Identifies the  CameraZOffset dependency property.Identifies the  CameraZOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CardHeightToViewportRatioProperty">
            <summary>Identifies the  CardHeightToViewportRatio dependency property.Identifies the  CardHeightToViewportRatio dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CenterCardXAngleProperty">
            <summary>Identifies the  CenterCardXAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.CenterCardYAngleProperty">
            <summary>Identifies the  CenterCardYAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.EmptySurfaceBrushProperty">
            <summary>Identifies the  EmptySurfaceBrush dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.FieldOfViewProperty">
            <summary>Identifies the  FieldOfView dependency property.Identifies the  FieldOfView dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.IsCardFlippingEnabledProperty">
            <summary>Identifies the  IsCardFlippingEnabled dependency property.Identifies the  IsCardFlippingEnabled dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.ShowReflectionsProperty">
            <summary>Identifies the  ShowReflections dependency property.Identifies the  ShowReflections dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsCountProperty">
            <summary>Identifies the  SideCardsCount dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsXAngleProperty">
            <summary>Identifies the  SideCardsXAngle dependency property.Identifies the  SideCardsXAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsXOffsetProperty">
            <summary>Identifies the  SideCardsXOffset dependency property.Identifies the  SideCardsXOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsXSpacingProperty">
            <summary>Identifies the  SideCardsXSpacing dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsYAngleProperty">
            <summary>Identifies the  SideCardsYAngle dependency property.Identifies the  SideCardsYAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsZOffsetProperty">
            <summary>Identifies the  SideCardsZOffset dependency property.Identifies the  SideCardsZOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowItemsHost.SideCardsZSpacingProperty">
            <summary>Identifies the  SideCardsZSpacing dependency property.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.CardflowView3D">
            <summary>The Cardflow™ 3D view, which is represented by the  CardflowView3D class, provides a 3-dimensional card-view layout for the data items in a grid and allows various card "surfaces" to display data using customized, theme-defined surface configurations.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowView3D.#ctor">
            <summary>Initializes a new instance of the CardFlowView3D class.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowView3D.GetSurfaces(System.Windows.DependencyObject)">
            <summary>Gets a value representing the surfaces that are supported by the Cardflow 3D view.</summary>
            <returns>A  CardflowView3DSurfaces value representing the surfaces that are supported by the Cardflow 3D view.</returns>
            <remarks>    A multi-surface theme defines the default surface     configurations that will be applied to all surfaces provided by     a multi-surface view (see      DefaultSurfaceConfigurations property). These default     configurations can be overridden by adding surface     configurations to the theme's      SurfaceConfigurations collection and specifying the     surfaces to which they will be applied using the multi-surface     view's      Surfaces attached property (see Examples 1 and 3).     If a surface configuration is added to the     SurfaceConfigurations collection but does not     specify the surfaces to which it should be applied, it will be     ignored. If more than one configuration specifies the same     surface, the last one on which the Surfaces     attached property was set will be used.</remarks>
            <param name="obj">    The dependency object from which the property value is     read.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.CardflowView3D.SetSurfaces(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.CardflowView3DSurfaces)">
            <summary>Sets a value representing the surfaces that are supported by the Cardflow 3D view.</summary>
            <remarks>    A multi-surface theme defines the default surface     configurations that will be applied to all surfaces provided by     a multi-surface view (see      DefaultSurfaceConfigurations property). These default     configurations can be overridden by adding surface     configurations to the theme's      SurfaceConfigurations collection and specifying the     surfaces to which they will be applied using the multi-surface     view's      Surfaces attached property (see Examples 1 and 3).     If a surface configuration is added to the     SurfaceConfigurations collection but does not     specify the surfaces to which it should be applied, it will be     ignored. If more than one configuration specifies the same     surface, the last one on which the Surfaces     attached property was set will be used.</remarks>
            <param name="obj">The dependency object to which the attached property is written.</param>
            <param name="value">A  CardflowView3DSurfaces value representing the surfaces that are supported by the Cardflow 3D view.</param>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraLooksAtOriginOnX">
            <summary>Gets or sets a value indicating whether the camera looks at the X origin when it moves along the X axis (see Remarks).</summary>
            <remarks>    When the camera moves along the X and Y axes, it can     either continuously look at the corresponding X or Y origins or     straight ahead. For example, if the camera were to move in a     negative direction (left) along the X axis and in a positive     direction (up) along the Y axis with both the      CameraLooksAtOriginOnX and      CameraLooksAtOriginOnY properties set to     false, it would look straight ahead without     looking at the cards, which would then be visible only on the     lower right (see Figure 1). With the camera in the same     position but looking at both the X and Y origins, the result     would be that the center card would always remain visible and     in the center of the viewport (see Figure 2).          Figure 1: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to     false          Figure 2: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to true          Figure 3: CameraLooksAtOriginOnY set to     true; CameraLooksAtOriginOnX set to     false          Figure 4: CameraLooksAtOriginOnX set to     true; CameraLooksAtOriginOnY set to     false</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraLooksAtOriginOnY">
            <summary>Gets or sets a value indicating whether the camera looks at the Y origin when it moves along the Y axis (see Remarks).</summary>
            <remarks>    When the camera moves along the X and Y axes, it can     either continuously look at the corresponding X or Y origins or     straight ahead. For example, if the camera were to move in a     negative direction (left) along the X axis and in a positive     direction (up) along the Y axis with both the      CameraLooksAtOriginOnX and      CameraLooksAtOriginOnY properties set to     false, it would look straight ahead without     looking at the cards, which would then be visible only on the     lower right (see Figure 1). With the camera in the same     position but looking at both the X and Y origins, the result     would be that the center card would always remain visible and     in the center of the viewport (see Figure 2).          Figure 1: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to     false          Figure 2: CameraLooksAtOriginOnX and     CameraLooksAtOriginOnY set to true          Figure 3: CameraLooksAtOriginOnY set to     true; CameraLooksAtOriginOnX set to     false          Figure 4: CameraLooksAtOriginOnX set to     true; CameraLooksAtOriginOnY set to     false</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraRevolutionXAngle">
            <summary>Gets or sets the angle of the camera as it revolves on the X-axis.</summary>
            <remarks>    The      CameraRevolutionXAngle and      CameraRevolutionYAngle properties determine the angle of     the camera as it revolves on the X or Y axis,     respectively.          Figure 1: Camera revolution angle on the X     axis</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraRevolutionYAngle">
            <summary>Gets or sets the angle of the camera as it revolves on the Y-axis.</summary>
            <remarks>    The      CameraRevolutionXAngle and      CameraRevolutionYAngle properties determine the angle of     the camera as it revolves on the X or Y axis,     respectively.          Figure 1: Camera revolution angle on the X     axis</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraXOffset">
            <summary>Gets or sets the X-axis offset of the camera from the middle of the center card.</summary>
            <remarks>    The camera offset properties determine the offset of the     camera, in cards widths, from the middle of the center card on     their corresponding axis, as illustrated in the diagram     below.     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraYOffset">
            <summary>Gets or sets the Y-axis offset of the camera from the middle of the center card.</summary>
            <remarks>    The camera offset properties determine the offset of the     camera, in cards widths, from the middle of the center card on     their corresponding axis, as illustrated in the diagram     below.     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraZOffset">
            <summary>Gets or sets the Z-axis offset of the camera from the middle of the center card.</summary>
            <remarks>    The camera offset properties determine the offset of the     camera, in cards widths, from the middle of the center card on     their corresponding axis, as illustrated in the diagram     below.     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CardHeightToViewportRatio">
            <summary>Gets or sets the physical card size relative to the height of the viewport.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CenterCardXAngle">
            <summary>Gets or sets the X-axis angle of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.CenterCardYAngle">
            <summary>Gets or sets the Y-axis angle of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.EmptySurfaceBrush">
            <summary>Gets or sets the brush that is applied to cards that currently do not display a surface.</summary>
            <remarks>Cards that are in the viewport but outside the range specified by the  SideCardsCount property will not display a surface until they are brought within range.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.FieldOfView">
            <summary>Gets or sets the camera's horizontal field of view.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.IsCardFlippingEnabled">
            <summary>Gets or sets a value indicating whether the center card can be flipped to show its back surface.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.ShowReflections">
            <summary>Gets or sets a value indicating whether card reflections are shown.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsCount">
            <summary>Gets or sets the maximum number of cards on each side of the center card on which surfaces are displayed.</summary>
            <remarks>Cards that are outside the specified range will not display surfaces and will use the  EmptySurfaceBrush. By default, 12.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsXAngle">
            <summary>Gets or sets the X-axis angle of the cards located to either side of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsXOffset">
            <summary>Gets or sets the X-axis offset of the cards located to either side of the center card, measured from the middle of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Z side-card offsets results in the side     cards being moved along the corresponding X or Z axis. Offsets     are measured in card widths, meaning that an offset of +1 on     the Z axis will cause the side-cards to move 1 card width     forward (red cards in the diagram below).     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsXSpacing">
            <summary>Gets or sets the X-axis spacing between the cards located to either side of the center card.</summary>
            <remarks>This property does not affect the spacing between the center card and the immediate left and right side cards</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsYAngle">
            <summary>Gets or sets the Y-axis angle of the cards located to either side of the center card (see Remarks).</summary>
            <remarks>    Changing the X or Y card angle results in the card(s)     being rotated around the corresponding X or Y axis.</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsZOffset">
            <summary>Gets or sets the Z-axis offset of the cards located to either side of the center card, measured from the middle of the center card.</summary>
            <remarks>    Changing the X or Z side-card offsets results in the side     cards being moved along the corresponding X or Z axis. Offsets     are measured in card widths, meaning that an offset of +1 on     the Z axis will cause the side-cards to move 1 card width     forward (red cards in the diagram below).     </remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsZSpacing">
            <summary>Gets or sets the Z-axis spacing between the cards located to either side of the center card.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraLooksAtOriginOnXProperty">
            <summary>Identifies the  CameraLooksAtOriginOnX dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraLooksAtOriginOnYProperty">
            <summary>Identifies the  CameraLooksAtOriginOnY dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraRevolutionXAngleProperty">
            <summary>Identifies the  CameraRevolutionXAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraRevolutionYAngleProperty">
            <summary>Identifies the  CameraRevolutionYAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraXOffsetProperty">
            <summary>Identifies the  CameraXOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraYOffsetProperty">
            <summary>Identifies the  CameraYOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CameraZOffsetProperty">
            <summary>Identifies the  CameraZOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CardHeightToViewportRatioProperty">
            <summary>Identifies the  CardHeightToViewportRatio dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CenterCardXAngleProperty">
            <summary>Identifies the  CenterCardXAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.CenterCardYAngleProperty">
            <summary>Identifies the  CenterCardYAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.EmptySurfaceBrushProperty">
            <summary>Identifies the  EmptySurfaceBrush dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.FieldOfViewProperty">
            <summary>Identifies the  FieldOfView dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.FlipCenterCard">
            <summary>Represents the FlipCenterCard command, which requests that the center card be flipped.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.IsCardFlippingEnabledProperty">
            <summary>Identifies the  IsCardFlippingEnabled dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.ShowReflectionsProperty">
            <summary>Identifies the  ShowReflections dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsCountProperty">
            <summary>Identifies the  SideCardsCount dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsXAngleProperty">
            <summary>Identifies the  SideCardsXAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsXOffsetProperty">
            <summary>Identifies the  SideCardsXOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsXSpacingProperty">
            <summary>Identifies the  SideCardsXSpacing dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsYAngleProperty">
            <summary>Identifies the  SideCardsYAngle dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsZOffsetProperty">
            <summary>Identifies the  SideCardsZOffset dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SideCardsZSpacingProperty">
            <summary>Identifies the  SideCardsZSpacing dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.CardflowView3D.SurfacesProperty">
            <summary>Identifies the  Surfaces attached property.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.ChameleonTheme">
            <summary>Represents the Chameleon theme, which is a two-tone theme that provides full control over its gradient color scheme.</summary>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.#ctor">
            <summary>Initializes a new instance of the ChameleonTheme class.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GetGradientDarkColor(System.Windows.DependencyObject)">
            <summary>Gets the bottom (dark) color that will be used to create the gradient scheme.</summary>
            <returns>A Color representing the bottom (dark) color that will be used to create the gradient scheme. See Remarks for default appearance.</returns>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
            <param name="obj">             The dependency object from which the property value is         read.     </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GetGradientLightColor(System.Windows.DependencyObject)">
            <summary>Gets the top (light) color that will be used to create the gradient scheme.</summary>
            <returns>A Color representing the top (light) color that will be used to create the gradient scheme. See Remarks for default appearance.</returns>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
            <param name="obj">             The dependency object from which the property value is         read.     </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GetTitleRegionOrientation(System.Windows.DependencyObject)">
            <summary>Gets a value representing the orientation of the title region.</summary>
            <returns>A  ChameleonTitleRegionOrientation value representing the orientation of the title region. By default, ChameleonTitleRegionOrientation.Upward for the cards located to the left of the center card and ChameleonTitleRegionOrientation.Downward for the cards located to the right.</returns>
            <param name="obj">             The dependency object from which the property value is         read.     </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GetTitleRegionPosition(System.Windows.DependencyObject)">
            <summary>Gets a value representing the position of the title region on a surface (see Remarks).</summary>
            <returns>A  ChameleonTitleRegionPosition value representing the position of the title region on a surface.</returns>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
            <param name="obj">             The dependency object from which the property value is         read.     </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.SetGradientDarkColor(System.Windows.DependencyObject,System.Windows.Media.Color)">
            <summary>Sets the bottom (dark) color that will be used to create the gradient scheme.</summary>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
            <param name="obj">The dependency object to which the attached property is written.</param>
            <param name="value">A Color representing the bottom (dark) color that will be used to create the gradient scheme. See Remarks for default appearance.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.SetGradientLightColor(System.Windows.DependencyObject,System.Windows.Media.Color)">
            <summary>Sets the top (light) color that will be used to create the gradient scheme.</summary>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
            <param name="obj">The dependency object to which the attached property is written.</param>
            <param name="value">A Color representing the top (light) color that will be used to create the gradient scheme. See Remarks for default appearance.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.SetTitleRegionOrientation(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ChameleonTitleRegionOrientation)">
            <summary>Sets a value representing the orientation of the title region.</summary>
            <param name="obj">The dependency object to which the attached property is written.</param>
            <param name="value">A  ChameleonTitleRegionOrientation value representing the orientation of the title region. By default, ChameleonTitleRegionOrientation.Upward.</param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ChameleonTheme.SetTitleRegionPosition(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ChameleonTitleRegionPosition)">
            <summary>Sets a value representing the position of the title region on a surface (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
            <param name="obj">The dependency object to which the attached property is written.</param>
            <param name="value">A  ChameleonTitleRegionPosition value representing the position of the title region on a surface.</param>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.DefaultDataRegionConfiguration">
            <summary>Gets or sets the  RegionConfiguration that will be applied to all data regions on all surfaces for which a  DataRegionConfiguration has not been explicitly provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.DefaultImageRegionConfiguration">
            <summary>Gets or sets the  RegionConfiguration that will be applied to all image regions on all surfaces for which a  RegionConfiguration has not been explicitly provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.DefaultTitleRegionConfiguration">
            <summary>Gets or sets the  RegionConfiguration that will be applied to all title regions on all surfaces for which a  TitleRegionConfiguration has not been explicitly provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GradientDarkColor">
            <summary>Gets or sets the bottom (dark) color that will be used to create the gradient scheme.</summary>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GradientLightColor">
            <summary>Gets or sets the top (light) color that will be used to create the gradient scheme.</summary>
            <remarks> Figure 1: Chameleon theme with default surface configurations and color scheme</remarks>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.TitleRegionOrientation">
            <summary>Gets or sets a value representing the orientation of the title region.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ChameleonTheme.TitleRegionPosition">
            <summary>Gets or sets a value representing the position of the title region on a surface (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GradientDarkColorProperty">
            <summary>Identifies the  GradientDarkColor attached property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ChameleonTheme.GradientLightColorProperty">
            <summary>Identifies the  GradientLightColor attached property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ChameleonTheme.TitleRegionOrientationProperty">
            <summary>Identifies the  TitleRegionOrientation dependency property.</summary>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ChameleonTheme.TitleRegionPositionProperty">
            <summary>Identifies the  TitleRegionPosition attached property.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme">
            <summary>Represents the Elemental Black theme, which is a basic black theme that was designed to blend perfectly with the black Office 2007 theme.</summary>
            <remarks> Figure 1: Elemental Black theme with default surface configurations</remarks>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.#ctor">
            <summary>Initializes a new instance of the ElementalBlackTheme class.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.GetTitleRegionPosition(System.Windows.DependencyObject)">
            <summary>Gets a value representing the position of the title region on a surface (see Remarks).</summary>
            <returns>An  ElementalTitleRegionPosition value representing the position of the title region on a surface.</returns>
            <param name="obj">             The dependency object from which the property value is         read.     </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.SetTitleRegionPosition(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition)">
            <summary>Sets a value representing the position of the title region on a surface (see Remarks).</summary>
            <param name="obj">The dependency object to which the attached property is written.</param>
            <param name="value">An  ElementalTitleRegionPosition value representing the position of the title region on a surface.</param>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.DefaultDataRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     data regions on all surfaces for which a          DataRegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.DefaultImageRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     image regions on all surfaces for which a          RegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.DefaultTitleRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     title regions on all surfaces for which a          TitleRegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.TitleRegionPosition">
            <summary>Gets or sets a value representing the position of the title region on a surface (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ElementalBlackTheme.TitleRegionPositionProperty">
            <summary>Identifies the  TitleRegionPosition attached property.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme">
            <summary>Represents the Elemental Blue theme, which is a basic blue theme that was designed to blend perfectly with the blue Office 2007 theme.</summary>
            <remarks> Figure 1: Elemental Blue theme with default surface configurations</remarks>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.#ctor">
            <summary>Initializes a new instance of the ElementalBlueTheme class.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.GetTitleRegionPosition(System.Windows.DependencyObject)">
            <summary>    Gets a value representing the position of the title     region on a surface (see Remarks).</summary>
            <returns>An  ElementalTitleRegionPosition value representing the position of the title region on a surface.</returns>
            <param name="obj">                                           The dependency object from which the property value                 is read.                                            </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.SetTitleRegionPosition(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition)">
            <summary>    Sets a value representing the position of the title     region on a surface (see Remarks).</summary>
            <param name="obj">    The dependency object to which the attached property is     written.</param>
            <param name="value">    An      ElementalTitleRegionPosition value representing the     position of the title region on a surface.</param>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.DefaultDataRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     data regions on all surfaces for which a          DataRegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.DefaultImageRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     image regions on all surfaces for which a          RegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.DefaultTitleRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     title regions on all surfaces for which a          TitleRegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.TitleRegionPosition">
            <summary>    Gets or sets a value representing the position of the     title region on a surface (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ElementalBlueTheme.TitleRegionPositionProperty">
            <summary>Identifies the  TitleRegionPosition attached property.</summary>
        </member>
        <member name="T:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme">
            <summary>Represents the Elemental Silver theme, which is a basic silver theme that was designed to blend perfectly with the silver Office 2007 theme.</summary>
            <remarks> Figure 1: Elemental Silver theme with default surface configurations</remarks>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.#ctor">
            <summary>    Initializes a new instance of the     ElementalSilverTheme class.</summary>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.GetTitleRegionPosition(System.Windows.DependencyObject)">
            <summary>    Gets a value representing the position of the title     region on a surface (see Remarks).</summary>
            <returns>An  ElementalTitleRegionPosition value representing the position of the title region on a surface.</returns>
            <param name="obj">                                           The dependency object from which the property value                 is read.                                            </param>
        </member>
        <member name="M:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.SetTitleRegionPosition(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ElementalTitleRegionPosition)">
            <summary>    Sets a value representing the position of the title     region on a surface (see Remarks).</summary>
            <param name="obj">    The dependency object to which the attached property is     written.</param>
            <param name="value">    An      ElementalTitleRegionPosition value representing the     position of the title region on a surface.</param>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.DefaultDataRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     data regions on all surfaces for which a          DataRegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.DefaultImageRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     image regions on all surfaces for which a          RegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.DefaultTitleRegionConfiguration">
            <summary>    Gets or sets the      RegionConfiguration that will be applied to all     title regions on all surfaces for which a          TitleRegionConfiguration has not been explicitly     provided.</summary>
        </member>
        <member name="P:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.TitleRegionPosition">
            <summary>    Gets or sets a value representing the position of the     title region on a surface (see Remarks).</summary>
            <remarks>    Where a title region is positioned on a surface is     determined by each multi-surface theme, which can also support     more than one position for some surface configurations (see     Table 1). As such, each multi-surface theme that supports     multiple title-region positions exposes a     TitleRegionPosition attached property that is     specific to the theme and which can be set on any of the     surface configurations it supports. The     TitleRegionPosition property can also be set     directly on the theme to change the title-region position of     all the applicable surface configurations.     Table 1: Supported title-region positions                                            Theme                 Surface configuration                 Positions                 Enumeration                                           Elemental                  Blue,                  Black, and                  Silver themes                                  TitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                           Elemental                  Blue,                  Black, and                  Silver themes                                  ImageAndTitleSurfaceConfiguration                 Top, Middle, and Bottom                                  ElementalTitleRegionPosition                                                            Chameleon theme                                  TitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  ImageAndTitleSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  CompleteSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                                                            Chameleon theme                                  TitleAndDataSurfaceConfiguration                 Left and Right                                  ChameleonTitleRegionPosition                           </remarks>
        </member>
        <member name="F:Xceed.Wpf.DataGrid.Views.ElementalSilverTheme.TitleRegionPositionProperty">
            <summary>Identifies the  TitleRegionPosition attached property.</summary>
        </member>
    </members>
</doc>
